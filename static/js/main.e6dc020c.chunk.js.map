{"version":3,"sources":["firebase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","where","orderBy","get","getMyNweets","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"2OAcAA,IAASC,cATc,CACnBC,OAAQC,0CACRC,WAAYD,sCACZE,UAAWF,sBACXG,cAAeH,kCACfI,kBAAmBJ,cACnBK,MAAOL,6CAKJ,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,OC8BxBC,EA9CE,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GACd,MAEIA,EADFC,OAAUC,EADZ,EACYA,KAAMC,EADlB,EACkBA,MAEL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAGVC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACfL,EAAMM,iBADS,UAIM,IAAfX,EAJS,gCAKEZ,EAAYwB,+BAA+BhB,EAAOE,GALpD,OAKXe,EALW,+CAQEzB,EAAY0B,2BAA2BlB,EAAOE,GARhD,QAQXe,EARW,eAUbE,QAAQC,IAAIH,GAVC,kDAYbV,EAAS,KAAMc,SAZF,0DAAH,sDAiBlB,OACE,qCACE,uBAAMR,SAAUA,EAAhB,UACE,uBAAOF,KAAK,QAAQW,KAAK,QAAQC,YAAY,QAAQC,UAAQ,EAACZ,MAAOZ,EAAOQ,SAAUA,IACtF,uBAAOG,KAAK,WAAWW,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACZ,MAAOV,EAAUM,SAAUA,IAClG,uBAAOc,KAAK,SAASV,MAAOR,EAAa,iBAAmB,WAC3DE,KAEH,sBAAMmB,QAVgB,kBAAMpB,GAAc,SAACqB,GAAD,OAAWA,MAUrD,SAA+BtB,EAAa,UAAY,uBCb/CuB,EA3BF,WAGX,IAAMC,EAAa,uCAAG,WAAMnB,GAAN,iBAAAK,EAAA,4DAGJ,YAFIH,EAAUF,EAAnBC,OAASC,MAGZkB,EAAW,IAAItC,EAAiBE,KAAKqC,mBAExB,WAATnB,IACJkB,EAAW,IAAItC,EAAiBE,KAAKsC,oBAPzB,SASEvC,EAAYwC,gBAAgBH,GAT9B,yDAAH,sDAanB,OACE,gCACE,cAAC,EAAD,IACA,gCACE,wBAAQJ,QAASG,EAAejB,KAAK,SAArC,kCACA,wBAAQc,QAASG,EAAejB,KAAK,SAArC,yC,QC6BOsB,EAnDD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzB,EAA8BpC,oBAAS,GAAvC,mBAAOqC,EAAP,KAAgBC,EAAhB,KACA,EAAgCtC,mBAASmC,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAa,uCAAG,sBAAA3B,EAAA,0DACT4B,OAAOC,QAAQ,sDADN,gCAIZjD,EAAUkD,IAAV,iBAAwBV,EAASW,KAAMC,SAJ3B,UAKa,KAA3BZ,EAASa,cALK,gCAMVnD,EAAeoD,WAAWd,EAASa,eAAeD,SANxC,2CAAH,qDAUbG,EAAgB,kBAAMZ,GAAW,SAACX,GAAD,OAAWA,MAO5Cb,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACfL,EAAMM,iBADS,SAETrB,EAAUkD,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAAEZ,KAAMC,IAF7C,OAGfF,GAAW,GAHI,2CAAH,sDAKd,OACE,8BACGD,EACC,qCACE,uBAAMvB,SAAUA,EAAhB,UACE,uBAAOD,MAAO2B,EAAU/B,SAhBjB,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZ4B,EAAY5B,IAYwCY,UAAQ,IACpD,uBAAOF,KAAK,SAASV,MAAM,oBAE7B,wBAAQa,QAASwB,EAAjB,uBAGF,qCACG,IACD,6BAAKf,EAASI,OACbJ,EAASa,eAAiB,qBAAKI,IAAKjB,EAASa,cAAeK,MAAM,OAAOC,OAAO,SAChFlB,GACC,qCACE,wBAAQV,QAASgB,EAAjB,0BACA,wBAAQhB,QAASwB,EAAjB,iC,QCqBCK,EA/DM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,EAA0BxD,mBAAS,IAAnC,mBAAOyD,EAAP,KAAcC,EAAd,KACA,EAAoC1D,mBAAS,IAA7C,mBAAO2D,EAAP,KAAmBC,EAAnB,KAEM9C,EAAQ,uCAAG,WAAOJ,GAAP,mBAAAK,EAAA,yDACfL,EAAMM,iBAEa,KAAf2C,EAHW,uBAIPE,EAAgBhE,EAAeiE,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,YAA6CC,gBAJtD,SAKUJ,EAAcK,UAAUP,EAAY,YAL9C,cAKPQ,EALO,gBAMSA,EAASL,IAAIM,iBANtB,OAMbpB,EANa,+BAQTrD,EAAU0E,WAAW,UAAUC,IAAI,CACvC/B,KAAMkB,EACNc,UAAWC,KAAKC,MAChBC,UAAWlB,EAAQQ,IACnBhB,kBAZa,QAcfU,EAAS,IACTE,EAAc,IAfC,4CAAH,sDA4Cd,OACE,uBAAM9C,SAAUA,EAAhB,UACE,uBAAOD,MAAO4C,EAAOhD,SA5BR,SAACC,GAChBA,EAAMM,iBACN,IACYH,EACRH,EADFC,OAAUE,MAEZ6C,EAAS7C,IAuBkCU,KAAK,OAAOC,YAAY,wBAAwBmD,UAAW,MACpG,uBAAOpD,KAAK,OAAOqD,OAAO,UAAUnE,SArBnB,SAACC,GACpB,IAGMmE,EADFnE,EADFC,OAAUmE,MAEU,GAEhBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB,IACmBC,EACfD,EADFE,cAAiBD,OAEnBvB,EAAcuB,IAEhBJ,EAAOM,cAAcR,MASnB,uBAAOtD,KAAK,SAASV,MAAM,UAC1B8C,GACC,gCACE,wBAAQjC,QATU,kBAAMkC,EAAc,KAStC,mBACA,qBAAKR,IAAKO,EAAYN,MAAM,OAAOC,OAAO,gBCpBrCgC,EAjCF,SAAC,GAAiB,IAAf9B,EAAc,EAAdA,QAEd,EAA4BxD,mBAAS,IAArC,mBAAOuF,EAAP,KAAeC,EAAf,KAmBA,OAlBApE,QAAQC,IAAIkE,GAKZE,qBAAU,WACR9F,EAAU0E,WAAW,UAAUqB,YAAW,SAACC,GACzC,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBACjCjD,GAAIiD,EAASjD,IACViD,EAAS7E,WAEdE,QAAQC,IAAIuE,GACZJ,EAAUI,QAEX,IAKD,qCACA,cAAC,EAAD,CAAcpC,QAASA,IACrB,8BACG+B,EAAOO,KAAI,SAACrC,GAAD,OACV,cAAC,EAAD,CAAsBtB,SAAUsB,EAAOrB,QAASoB,EAAQQ,MAAQP,EAAMiB,WAA1DjB,EAAMX,aC4BbkD,EAvDC,SAAC,GAA6B,IAA3BxC,EAA0B,EAA1BA,QAAQyC,EAAkB,EAAlBA,YACzB,EAA4BjG,mBAAS,IAArC,mBAAOuF,EAAP,KAAeC,EAAf,KACMU,EAAUC,cAChB,EAA4CnG,mBAASwD,EAAQ4C,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KAYIxF,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,yDACbL,EAAMM,iBACFwC,EAAQ4C,cAAgBC,EAFf,gCAGH7C,EAAQ+C,cAAc,CAACH,YAAaC,IAHjC,OAITJ,IAJS,2CAAH,sDAwBZ,OAfAR,qBAAU,YACS,uCAAG,4BAAA1E,EAAA,sEACGpB,EAClB0E,WAAW,UACXmC,MAAM,YAAa,KAAMhD,EAAQQ,KACjCyC,QAAQ,YAAa,OACrBC,MALe,OACZnB,EADY,OASlBC,EAAUD,EAAOM,KAAKC,KAAI,SAACjD,GAAD,OAASA,EAAI3B,WATrB,2CAAH,qDAWjByF,KACC,IAGD,qCACE,uBAAM7F,SAAUA,EAAhB,UACE,uBAAOL,SAhCE,SAACC,GACd,IAAgBG,EAAUH,EAAnBC,OAASE,MAChByF,EAAkBzF,IA8BaU,KAAK,OAAOC,YAAY,eAAeX,MAAOwF,IACzE,uBAAO9E,KAAK,SAASV,MAAM,sBAE7B,wBAAQa,QAxCU,WACpBjC,EAAYmH,UACZV,EAAQW,KAAK,MAsCX,qBACA,8BACGtB,EAAOO,KAAI,SAACrC,GAAD,OACV,cAAC,EAAD,CAA6BtB,SAAUsB,EAAOrB,QAASoB,EAAQQ,MAAQP,EAAMiB,WAAjEjB,EAAMc,oBCrCbuC,EAfI,SAAC,GAAe,IAAdtD,EAAa,EAAbA,QACnB,OACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMuD,GAAG,IAAT,oBAEF,6BACI,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqBvD,EAAQ4C,YAA7B,4BCuBGY,EA1BG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYzD,EAA2B,EAA3BA,QAASyC,EAAkB,EAAlBA,YAExC,OACE,eAAC,IAAD,WACGgB,GAAc,cAAC,EAAD,CAAYzD,QAASA,IACpC,cAAC,IAAD,UACGyD,EACC,qCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAM3D,QAASA,MAEjB,cAAC,IAAD,CAAO0D,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAAS3D,QAASA,EAASyC,YAAaA,SAI5C,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,YCgBGC,MApCf,WACE,MAAwBpH,oBAAS,GAAjC,mBAAOqH,EAAP,KAAaC,EAAb,KACA,EAA8BtH,mBAAS,MAAvC,mBAAOwD,EAAP,KAAgB+D,EAAhB,KA0BA,OAfA9B,qBAAU,WACRhG,EAAY+H,oBAAmB,SAACC,GAG5BF,IAFEE,GAES,CACTzD,IAAKyD,EAAKzD,IACVoC,YAAaqB,EAAKrB,YAClBG,cAAe,SAACmB,GAAD,OAAUD,EAAKlB,cAAcmB,MAKhDJ,GAAQ,QAEV,IAEA,mCACGD,EAAM,cAAC,EAAD,CAAWJ,WAAYU,QAAQnE,GAAUA,QAASA,EAASyC,YA1BpD,WAClB,IAAMwB,EAAOhI,EAAYmI,YACzBL,EAAW,CACTvD,IAAKyD,EAAKzD,IACVoC,YAAaqB,EAAKrB,YAClBG,cAAe,SAACmB,GAAD,OAAUD,EAAKlB,cAAcmB,SAqBqD,qBC5BrGG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,W","file":"static/js/main.e6dc020c.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\"\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\nimport \"firebase/compat/storage\"\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firebaseInstance = firebase\nexport const authService = firebase.auth()\nexport const dbService = firebase.firestore()\nexport const storageService = firebase.storage()","import { authService } from 'firebase';\nimport { useState } from 'react';\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n          target: { name, value },\n        } = event;\n        if (name === \"email\") {\n          setEmail(value);\n        } else if (name === \"password\") {\n          setPassword(value);\n        }\n      };\n      const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n          let data;\n          if (newAccount === true) {\n            data = await authService.createUserWithEmailAndPassword(email, password);\n          } else {\n            // log in\n            data = await authService.signInWithEmailAndPassword(email, password);\n          }\n          console.log(data);\n        } catch (error) {\n          setError(error.message);\n        }\n      };\n      const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log in\"} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>{newAccount ? \"Sign in\" : \"Create Account\"}</span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm';\nimport { authService, firebaseInstance } from \"firebase\";\nimport { useState } from \"react\";\n\nconst Auth = () => {\n  \n  \n  const onSocialClick = async(event) => {\n       const { target: {name},} = event;\n       let provider;\n       if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n       }\n       else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n       }\n       const data = await authService.signInWithPopup(provider)\n     //   console.log(data);\n     //   console.log(data.user.uid);\n  }\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">Continue With Google</button>\n        <button onClick={onSocialClick} name=\"github\">Continue With Github</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"firebase\";\nimport { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제 하시겠습니까?\");\n\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      if (nweetObj.attachmentUrl !== \"\") {\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n      }\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input value={newNweet} onChange={onChange} required />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          {\" \"}\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default Nweet;\n","import { dbService, storageService } from 'firebase';\nimport { useState } from 'react';\nimport {v4 as uuidv4} from \"uuid\"\n\nconst NweetFactory = ({userObj}) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl;\n    if (attachment !== \"\") {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    await dbService.collection(\"nweets\").add({\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    });\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    event.preventDefault();\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    // browser api\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What 's on your mind?\" maxLength={120} />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Nweet\" />\n      {attachment && (\n        <div>\n          <button onClick={onClearAttachment}>Clear</button>\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { v4 as uuid4 } from \"uuid\";\nimport Nweet from \"components/Nweet\";\nimport { dbService, storageService } from \"firebase\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport NweetFactory from 'components/NweetFactory';\n\nconst Home = ({ userObj }) => {\n  \n  const [nweets, setNweets] = useState([]);\n  console.log(nweets);\n\n\n\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const newArray = snapshot.docs.map((document) => ({\n        id: document.id,\n        ...document.data(),\n      }));\n      console.log(newArray);\n      setNweets(newArray);\n    });\n  }, []);\n\n\n\n  return (\n    <>\n    <NweetFactory userObj={userObj}/>\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet key={nweet.id} nweetObj={nweet} isOwner={userObj.uid === nweet.creatorId} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import Nweet from \"components/Nweet\";\nimport { authService, dbService } from \"firebase\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { useState } from \"react\";\n\nconst Profile = ({ userObj,refreshUser }) => {\n  const [nweets, setNweets] = useState([]);\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n \nconst onChange = (event) => {\n    const {target: {value}} = event\n    setNewDisplayName(value)\n}\n\nconst onSubmit = async(event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n        await userObj.updateProfile({displayName: newDisplayName})\n        refreshUser()\n    }\n}\n\n  // 내가 쓴 트윗만 보여줌\n  useEffect(() => {\n    const getMyNweets = async () => {\n      const nweets = await dbService\n        .collection(\"nweets\")\n        .where(\"creatorId\", \"==\", userObj.uid)\n        .orderBy(\"createdAt\", \"asc\")\n        .get();\n\n      //   console.log(nweets.docs.map((doc) => doc.data()));\n      //   console.log(nweets);\n      setNweets(nweets.docs.map((doc) => doc.data()));\n    };\n    getMyNweets();\n  }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName}/>\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log out</button>\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet key={nweet.createdAt} nweetObj={nweet} isOwner={userObj.uid === nweet.creatorId} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","import { Link } from \"react-router-dom\";\n\nconst Navigation = ({userObj}) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n            <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useState } from \"react\";\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from 'routes/Profile';\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n    // console.log(userObj);\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj}/>}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj}/>\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser}/>\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n        \n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from 'firebase';\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\nconst refreshUser = () => {\n  const user = authService.currentUser\n  setUserObj({\n    uid: user.uid,\n    displayName: user.displayName,\n    updateProfile: (args) => user.updateProfile(args)\n  })\n}\n\n  useEffect(()=> {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        \n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args)\n        })\n      } else {\n        setUserObj(false)\n      }\n      setInit(true)\n    })\n  },[])\n  return (\n    <>\n      {init? <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser}/>: \"Initializing...\"}\n      \n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"components/App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}